// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// DBBLOGPOSTDao is the data access object for table DB_BLOG_POST.
type DBBLOGPOSTDao struct {
	table   string            // table is the underlying table name of the DAO.
	group   string            // group is the database configuration group name of current DAO.
	columns DBBLOGPOSTColumns // columns contains all the column names of Table for convenient usage.
}

// DBBLOGPOSTColumns defines and stores column names for table DB_BLOG_POST.
type DBBLOGPOSTColumns struct {
	ID         string //
	TITLE      string //
	TIMELINE   string //
	TIME       string //
	AUTHOR     string //
	HID        string //
	CONTENT    string //
	CLASSIFY   string //
	TAG        string //
	VISITTIMES string //
	ONTOP      string //
}

// dBBLOGPOSTColumns holds the columns for table DB_BLOG_POST.
var dBBLOGPOSTColumns = DBBLOGPOSTColumns{
	ID:         "ID",
	TITLE:      "TITLE",
	TIMELINE:   "TIMELINE",
	TIME:       "TIME",
	AUTHOR:     "AUTHOR",
	HID:        "HID",
	CONTENT:    "CONTENT",
	CLASSIFY:   "CLASSIFY",
	TAG:        "TAG",
	VISITTIMES: "VISIT_TIMES",
	ONTOP:      "ONTOP",
}

// NewDBBLOGPOSTDao creates and returns a new DAO object for table data access.
func NewDBBLOGPOSTDao() *DBBLOGPOSTDao {
	return &DBBLOGPOSTDao{
		group:   "default",
		table:   "DB_BLOG_POST",
		columns: dBBLOGPOSTColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *DBBLOGPOSTDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *DBBLOGPOSTDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *DBBLOGPOSTDao) Columns() DBBLOGPOSTColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *DBBLOGPOSTDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *DBBLOGPOSTDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *DBBLOGPOSTDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
